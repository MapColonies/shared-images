services:
  nginx-s3-gateway:
    build: ../
    env_file:
      - .env
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf.template:ro
      - ./default.conf:/etc/nginx/templates/default.conf.template:ro
      - ./redis-get-key.lua:/etc/nginx/lua/redis-get-key.lua:ro
      - ./redis-set-key.lua:/etc/nginx/lua/redis-set-key.lua:ro
  redis:
    image: redis:alpine3.19
    ports:
      - 6379:6379
    env_file:
      - .env
    command: >
      sh -c 'if [ "$REDIS_REQUIRE_PASSWORD" = "true" ]; then
            exec redis-server --requirepass "$REDIS_PASSWORD";
        else
            exec redis-server;
        fi'
  minio:
    image: minio/minio:RELEASE.2023-12-09T18-17-51Z.fips
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
      - MINIO_DEFAULT_BUCKETS=${S3_BUCKET_NAME}
    command: server /data --console-address ":9001"

  # Optional: Sets a default bucket and object in minio
  createBucket:
    image: minio/mc:RELEASE.2023-12-07T22-13-17Z.fips
    volumes:
      - ./minioData:/mnt/minioData:ro
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/s3-redis;
      /usr/bin/mc anonymous set public myminio/s3-redis;
      /usr/bin/mc cp --recursive mnt/minioData/ myminio/s3-redis/;
      "
